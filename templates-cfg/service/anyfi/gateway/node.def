tag:
priority: 999
type: txt
help: Anyfi Gateway

end:
     # Validate configuration and generate conffile
     if [ ${COMMIT_ACTION} != DELETE ]; then
         eval controllers=( $(cli-shell-api listNodes service anyfi gateway $VAR(@) controller) )

         if [ -z "${controllers[0]}" ]; then
             echo "Error configuring anyfi gateway: must specify controller."
             exit 1
         fi
         if [ -n "${controllers[1]}" ]; then
             echo "Error configuring anyfi gateway: cannot specify more than one controller."
             exit 1
         fi

         sudo /opt/vyatta/sbin/vyatta-anyfi-gateway.pl --instance=$VAR(@) \
                 --config=/etc/anyfi-gateway-$VAR(@).conf || exit 1
     fi

     # Stop the old daemon
     if [ ${COMMIT_ACTION} == ACTIVE ] || [ ${COMMIT_ACTION} == DELETE ]; then
         if [ -f /var/run/anyfi-gateway-$VAR(@).pid ]; then
             echo -n "Stopping anyfi gateway:"
             sudo kill -TERM $(sudo cat /var/run/anyfi-gateway-$VAR(@).pid)
             echo " anyfi-gateway."
         fi
     fi

     # Start a new daemon
     if [ ${COMMIT_ACTION} != DELETE ]; then
         controller=${controllers[0]}
         args="-C $controller"

         if cli-shell-api exists service anyfi gateway $VAR(@) controller $controller key; then
             key=$(cli-shell-api returnValue service anyfi gateway $VAR(@) controller $controller key)
             args="$args --controller-key=$key"
         fi
         if cli-shell-api exists service anyfi gateway $VAR(@) port-range; then
             first_port=$(cli-shell-api returnValue service anyfi gateway $VAR(@) port-range | cut -d- -f1)
             args="$args -p $first_port"
         fi

         args="$args -B -P /var/run/anyfi-gateway-$VAR(@).pid /etc/anyfi-gateway-$VAR(@).conf"

         echo -n "Starting anyfi gateway:"
         sudo /usr/sbin/anyfi-gateway --accept-license $args || exit 1
         echo " anyfi-gateway."
     fi

